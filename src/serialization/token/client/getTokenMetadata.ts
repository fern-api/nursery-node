/**
 * This file auto-generated by Fern from our API Definition.
 */

import { FernNurseryApi } from "../../..";
import * as core from "../../../core";

export const Error: core.schemas.Schema<Error.Raw, FernNurseryApi.token.getTokenMetadata.Error> = core.schemas
  .union("errorName", {
    TokenNotFoundError: core.schemas.object({}),
  })
  .transform<FernNurseryApi.token.getTokenMetadata.Error>({
    parse: (value) => {
      switch (value.errorName) {
        case "TokenNotFoundError": {
          return FernNurseryApi.token.getTokenMetadata.Error.tokenNotFoundError();
        }
      }
    },
    json: (value) => value as any,
  });

export declare namespace Error {
  type Raw = Error.TokenNotFoundError;

  interface TokenNotFoundError {
    errorName: "TokenNotFoundError";
  }
}
