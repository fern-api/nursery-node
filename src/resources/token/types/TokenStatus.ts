/**
 * This file auto-generated by Fern from our API Definition.
 */

import { FernNurseryApi } from "@fern-api/nursery";
import * as core from "../../../core";

export type TokenStatus =
  | FernNurseryApi.TokenStatus.Active
  | FernNurseryApi.TokenStatus.Expired
  | FernNurseryApi.TokenStatus.Revoked
  | FernNurseryApi.TokenStatus._Unknown;

export declare namespace TokenStatus {
  interface Active extends _Utils {
    type: "active";
  }

  interface Expired extends _Utils {
    type: "expired";
  }

  interface Revoked extends _Utils {
    type: "revoked";
  }

  interface _Unknown extends _Utils {
    type: void;
  }

  interface _Utils {
    _visit: <_Result>(visitor: FernNurseryApi.TokenStatus._Visitor<_Result>) => _Result;
  }

  interface _Visitor<_Result> {
    active: () => _Result;
    expired: () => _Result;
    revoked: () => _Result;
    _other: (value: { type: string }) => _Result;
  }
}

export const TokenStatus = {
  active: (): FernNurseryApi.TokenStatus.Active => {
    const valueWithoutVisit: Omit<FernNurseryApi.TokenStatus.Active, "_visit"> = {
      type: "active",
    };
    return core.addNonEnumerableProperty(valueWithoutVisit, "_visit", function <
      _Result
    >(this: FernNurseryApi.TokenStatus.Active, visitor: FernNurseryApi.TokenStatus._Visitor<_Result>) {
      return FernNurseryApi.TokenStatus._visit(this, visitor);
    });
  },

  expired: (): FernNurseryApi.TokenStatus.Expired => {
    const valueWithoutVisit: Omit<FernNurseryApi.TokenStatus.Expired, "_visit"> = {
      type: "expired",
    };
    return core.addNonEnumerableProperty(valueWithoutVisit, "_visit", function <
      _Result
    >(this: FernNurseryApi.TokenStatus.Expired, visitor: FernNurseryApi.TokenStatus._Visitor<_Result>) {
      return FernNurseryApi.TokenStatus._visit(this, visitor);
    });
  },

  revoked: (): FernNurseryApi.TokenStatus.Revoked => {
    const valueWithoutVisit: Omit<FernNurseryApi.TokenStatus.Revoked, "_visit"> = {
      type: "revoked",
    };
    return core.addNonEnumerableProperty(valueWithoutVisit, "_visit", function <
      _Result
    >(this: FernNurseryApi.TokenStatus.Revoked, visitor: FernNurseryApi.TokenStatus._Visitor<_Result>) {
      return FernNurseryApi.TokenStatus._visit(this, visitor);
    });
  },

  _visit: <_Result>(
    value: FernNurseryApi.TokenStatus,
    visitor: FernNurseryApi.TokenStatus._Visitor<_Result>
  ): _Result => {
    switch (value.type) {
      case "active":
        return visitor.active();
      case "expired":
        return visitor.expired();
      case "revoked":
        return visitor.revoked();
      default:
        return visitor._other(visitor as any);
    }
  },
} as const;
